<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xabe.FFmpeg</name>
    </assembly>
    <members>
        <member name="T:Xabe.FFmpeg.Conversion">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Build">
            <inheritdoc />
        </member>
        <member name="E:Xabe.FFmpeg.Conversion.OnProgress">
            <inheritdoc cref="E:Xabe.FFmpeg.IConversion.OnProgress" />
        </member>
        <member name="E:Xabe.FFmpeg.Conversion.OnDataReceived">
            <inheritdoc cref="E:Xabe.FFmpeg.IConversion.OnDataReceived" />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Start">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Start(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Start(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Start(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Clear">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Rotate(Xabe.FFmpeg.Enums.RotateDegrees)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Split(System.TimeSpan,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.AddSubtitle(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSubtitle(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSubtitle(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSubtitle(System.String,System.String,Xabe.FFmpeg.Model.Size)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSubtitle(System.String,System.String,System.String,Xabe.FFmpeg.Model.Size)">
            <inheritdoc />
        </member>
        <member name="P:Xabe.FFmpeg.Conversion.OutputFilePath">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSpeed(Xabe.FFmpeg.Enums.Speed)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSpeed(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetAudio(Xabe.FFmpeg.Enums.AudioCodec,Xabe.FFmpeg.Enums.AudioQuality)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetAudio(System.String,Xabe.FFmpeg.Enums.AudioQuality)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetVideo(Xabe.FFmpeg.Enums.VideoCodec,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetVideo(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.UseMultiThread(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetInput(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.DisableChannel(Xabe.FFmpeg.Enums.Channel)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetInput(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetInput(System.IO.FileInfo)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetInput(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetOutput(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetScale(Xabe.FFmpeg.Enums.VideoSize)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSize(Xabe.FFmpeg.Model.Size)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetCodec(Xabe.FFmpeg.Enums.VideoCodec)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetCodec(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetBitstreamFilter(Xabe.FFmpeg.Enums.Channel,Xabe.FFmpeg.Enums.Filter)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetBitstreamFilter(Xabe.FFmpeg.Enums.Channel,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.StreamCopy(Xabe.FFmpeg.Enums.Channel)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetWatermark(System.String,Xabe.FFmpeg.Enums.Position)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.ChangeSpeed(Xabe.FFmpeg.Enums.Channel,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Reverse(Xabe.FFmpeg.Enums.Channel)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetSeek(System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetOutputFramesCount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.SetLoop(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.UseShortest(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Concat(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.Concatenate(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Conversion.AddParameter(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Xabe.FFmpeg.ConversionHelper">
            <summary>
                Derives preconfigurated Configuration objects
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ToMp4(System.String,System.String,Xabe.FFmpeg.Enums.Speed,Xabe.FFmpeg.Enums.VideoSize,Xabe.FFmpeg.Enums.AudioQuality,System.Boolean)">
            <summary>
                Convert file to MP4
            </summary>
            <param name="inputPath">Input path</param>
            <param name="outputPath">Destination file</param>
            <param name="speed">Conversion speed</param>
            <param name="size">Dimension</param>
            <param name="audioQuality">Audio quality</param>
            <param name="multithread">Use multithread</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ToTs(System.String,System.String)">
            <summary>
                Convert file to TS
            </summary>
            <param name="inputPath">Input path</param>
            <param name="outputPath">Destination file</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ToWebM(System.String,System.String,Xabe.FFmpeg.Enums.VideoSize,Xabe.FFmpeg.Enums.AudioQuality,System.Boolean)">
            <summary>
                Convert file to WebM
            </summary>
            <param name="inputPath">Input path</param>
            <param name="outputPath">Destination file</param>
            <param name="size">Dimension</param>
            <param name="audioQuality">Audio quality</param>
            <param name="multithread">Use multithread</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ToOgv(System.String,System.String,Xabe.FFmpeg.Enums.VideoSize,Xabe.FFmpeg.Enums.AudioQuality,System.Boolean)">
            <summary>
                Convert file to OGV
            </summary>
            <param name="inputPath">Input path</param>
            <param name="outputPath">Destination file</param>
            <param name="size">Dimension</param>
            <param name="audioQuality">Audio quality</param>
            <param name="multithread">Use multithread</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ChangeSize(System.String,System.String,Xabe.FFmpeg.Enums.VideoSize)">
            <summary>
                Change video size
            </summary>
            <param name="inputPath">Input path</param>
            <param name="output">Output path</param>
            <param name="size">Expected size</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.AddSubtitle(System.String,System.String,System.String,System.String)">
            <summary>
                Add subtitle to file. It will be added as new stream so if you want to burn subtitles into video you should use
                SetSubtitles method.
            </summary>
            <param name="inputPath">Input path</param>
            <param name="output">Output path</param>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <param name="language">Language code in ISO 639. Example: "eng", "pol", "pl", "de", "ger"</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.BurnSubtitle(System.String,System.String,System.String)">
            <summary>
                Burn subtitle into video. If you want to add subtitle as new stream (like in .mkv) you should use AddSubtitle
                method.
            </summary>
            <param name="inputPath">Input path</param>
            <param name="output">Output path</param>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ExtractVideo(System.String,System.String)">
            <summary>
                Extract video from file
            </summary>
            <param name="inputPath">Input path</param>
            <param name="output">Output audio stream</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.SetWatermark(System.String,System.String,Xabe.FFmpeg.Enums.Position,System.String)">
            <summary>
                Melt watermark into video
            </summary>
            <param name="inputPath">Input video path</param>
            <param name="position">Position of watermark</param>
            <param name="output">Output file</param>
            <param name="inputImage">Watermark</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ExtractAudio(System.String,System.String)">
            <summary>
                Extract audio from file
            </summary>
            <param name="inputPath">Input path</param>
            <param name="output">Output video stream</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.ToGif(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Convert image video stream to gif
            </summary>
            <param name="inputPath">Input path</param>
            <param name="output">Output path</param>
            <param name="loop">Number of repeats</param>
            <param name="delay">Delay between repeats (in seconds)</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.AddAudio(System.String,System.String,System.String)">
            <summary>
                Add audio to file
            </summary>
            <param name="inputPath">Input path</param>
            <param name="audioFilePath">Audio file</param>
            <param name="output">Output file</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.Snapshot(System.String,System.String,Xabe.FFmpeg.Model.Size,System.Nullable{System.TimeSpan})">
            <summary>
                Saves snapshot of video
            </summary>
            <param name="inputPath">Video</param>
            <param name="outputPath">Output file</param>
            <param name="size">Dimension of snapshot</param>
            <param name="captureTime"></param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.SaveM3U8Stream(System.Uri,System.String)">
            <summary>
                Records M3U8 streams to the specified output.
            </summary>
            <param name="uri">URI to stream.</param>
            <param name="outputPath">Output file</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.JoinWith(System.String,System.String[])">
            <summary>
                Concat multiple inputVideos
            </summary>
            <param name="output">Concatenated inputVideos</param>
            <param name="inputVideos">Videos to add</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.Concatenate(System.String,System.String[])">
            <summary>
                Concat multiple inputVideos.
            </summary>
            <param name="output">Concatenated inputVideos</param>
            <param name="inputVideos">Videos to add</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionHelper.Split(System.String,System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
                Get part of video
            </summary>
            <param name="inputPath">Video</param>
            <param name="outputPath">Output file</param>
            <param name="startTime">Start point</param>
            <param name="duration">Duration of new video</param>
            <returns></returns>
        </member>
        <member name="T:Xabe.FFmpeg.ConversionQueue">
            <summary>
                Create queue for conversions
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.ConversionQueue.ConversionQueueEventHandler">
            <summary>
                Information about queue's media status
            </summary>
            <param name="currentItemNumber">Auto incremented id of conversion</param>
            <param name="totalItemsCount">Count of conversion items</param>
            <param name="conversion">Conversion that was just finished</param>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionQueue.#ctor(System.Boolean)">
            <summary>
                Queue for conversions.
            </summary>
            <param name="parallel">
                If set, queue create multiple workers based on CPU cores. It's best to set if files are small
                (less than few MB).
            </param>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionQueue.Dispose">
            <inheritdoc />
        </member>
        <member name="E:Xabe.FFmpeg.ConversionQueue.OnConverted">
            <summary>
                Occurs when conversion in queue finished
            </summary>
        </member>
        <member name="E:Xabe.FFmpeg.ConversionQueue.OnException">
            <summary>
                Occurs when appers any exceptions during conversion
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionQueue.Start(System.Threading.CancellationTokenSource)">
            <summary>
                Start converting media in queue
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionQueue.Pause">
            <summary>
                Pause converting media in queue
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.ConversionQueue.Add(Xabe.FFmpeg.IConversion)">
            <summary>
                Add conversion to queue
            </summary>
            <param name="conversion">Defined conversion</param>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.AudioQuality">
            <summary>
                Quality of audio
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.AudioQuality.Ultra">
            <summary>
                Ultra quality (384)
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.AudioQuality.Hd">
            <summary>
                HD quality (192)
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.AudioQuality.Normal">
            <summary>
                Normal quality (128)
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.AudioQuality.Low">
            <summary>
                Low quality (64)
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.VideoCodec">
            <summary>
                Video codec
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.VideoCodec.LibX264">
            <summary>
                LibX264
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.VideoCodec.LibVpx">
            <summary>
                LibVpx
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.VideoCodec.LibTheora">
            <summary>
                LibTheora
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.VideoCodec.Png">
            <summary>
                Png
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.VideoCodec.MpegTs">
            <summary>
                MpegTs
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.AudioCodec">
            <summary>
                Audio codec
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.AudioCodec.Aac">
            <summary>
                Aac
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.AudioCodec.LibVorbis">
            <summary>
                LibVorbis
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.Filter">
            <summary>
                Filter
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Filter.H264_Mp4ToAnnexB">
            <summary>
                H264_Mp4ToAnnexB
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Filter.Aac_AdtstoAsc">
            <summary>
                Aac_AdtstoAsc
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.Channel">
            <summary>
                Channel
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Channel.Audio">
            <summary>
                Audio
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Channel.Video">
            <summary>
                Video
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Channel.Both">
            <summary>
                Both
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.Extensions">
            <summary>
                Video files extensions
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Mp4">
            <summary>
                .mp4
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Mp3">
            <summary>
                .mp3
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Ts">
            <summary>
                .ts
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.WebM">
            <summary>
                .webm
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Ogv">
            <summary>
                .ogv
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Png">
            <summary>
                .png
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Mkv">
            <summary>
                .mkv
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Extensions.Gif">
            <summary>
                .gif
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.Position">
            <summary>
                Position on video
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.UpperLeft">
            <summary>
                Upper left corner
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.UpperRight">
            <summary>
                Upper right corner
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.Right">
            <summary>
                5px from right border
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.Left">
            <summary>
                5px from left border
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.Up">
            <summary>
                5x from upper border
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.BottomRight">
            <summary>
                Bottom right corner
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.BottomLeft">
            <summary>
                Bottom left corner
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.Center">
            <summary>
                Center of video
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Position.Bottom">
            <summary>
                5px from bottom corner
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.RotateDegrees">
            <summary>
                Defines types of avaiable rotation
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.RotateDegrees.CounterClockwiseAndFlip">
            <summary>
                90 degrees counter clockwise and vertical flip
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.RotateDegrees.Clockwise">
            <summary>
                90 degress clockwise
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.RotateDegrees.CounterClockwise">
            <summary>
                90 degrees counter clockwise
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.RotateDegrees.ClockwiseAndFlip">
            <summary>
                90 degrees counter clockwise and vertical flip
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.RotateDegrees.Invert">
            <summary>
                Rotate video by 180 degrees
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.Speed">
            <summary>
                Speed of conversion. Faster speed causes worse optimization and quality.
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.VerySlow">
            <summary>
                Very slow
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.Slower">
            <summary>
                Slower
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.Slow">
            <summary>
                Slow
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.Medium">
            <summary>
                Medium
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.Fast">
            <summary>
                Fast
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.Faster">
            <summary>
                Faster
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.VeryFast">
            <summary>
                Very fast
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.SuperFast">
            <summary>
                Super fast
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.Speed.UltraFast">
            <summary>
                Ultra fast
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.SubtitleFormat">
            <summary>
                Output subtitle format
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.SubtitleFormat.SRT">
            <summary>
                SubRip
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.SubtitleFormat.WebVTT">
            <summary>
                WebVTT
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.SubtitleFormat.ASS">
            <summary>
                Advanced SubStation Alpha
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Enums.VideoSize">
            <summary>
                Video size
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.Enums.VideoSize.Resolution">
            <summary>
                FFmpeg resolution VideoSize
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.Enums.VideoSize.#ctor(System.Int32,System.Int32)">
            <summary>
                VideoSize in FFmpeg format
            </summary>
            <param name="width">Width of output video</param>
            <param name="height">Height of output video</param>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Ntsc">
            <summary>
                720x480
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Pal">
            <summary>
                720x576
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qntsc">
            <summary>
                352x240
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qpal">
            <summary>
                352x288
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Sntsc">
            <summary>
                640x480
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Spal">
            <summary>
                768x576
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Film">
            <summary>
                352x240
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.NtscFilm">
            <summary>
                352x240
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Sqcif">
            <summary>
                128x96
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qcif">
            <summary>
                176x144
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Cif">
            <summary>
                352x288
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._4Cif">
            <summary>
                704x576
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._16cif">
            <summary>
                1408x1152
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qqvga">
            <summary>
                160x120
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qvga">
            <summary>
                320x240
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Vga">
            <summary>
                640x480
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Svga">
            <summary>
                800x600
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Xga">
            <summary>
                1024x768
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Uxga">
            <summary>
                1600x1200
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qxga">
            <summary>
                2048x1536
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Sxga">
            <summary>
                1280x1024
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qsxga">
            <summary>
                2560x2048
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Hsxga">
            <summary>
                5120x4096
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wvga">
            <summary>
                852x480
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wxga">
            <summary>
                1366x768
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wsxga">
            <summary>
                1600x1024
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wuxga">
            <summary>
                1920x1200
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Woxga">
            <summary>
                2560x1600
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wqsxga">
            <summary>
                3200x2048
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wquxga">
            <summary>
                3840x2400
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Whsxga">
            <summary>
                6400x4096
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Whuxga">
            <summary>
                7680x4800
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Cga">
            <summary>
                320x200
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Ega">
            <summary>
                640x350
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Hd480">
            <summary>
                852x480
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Hd720">
            <summary>
                1280x720
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Hd1080">
            <summary>
                1920x1080
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._2K">
            <summary>
                2048x1080
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._2Kflat">
            <summary>
                1998x1080
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._2Kscope">
            <summary>
                2048x858
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._4K">
            <summary>
                4096x2160
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._4Kflat">
            <summary>
                3996x2160
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._4Kscope">
            <summary>
                4096x1716
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Nhd">
            <summary>
                640x360
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Hqvga">
            <summary>
                240x160
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Wqvga">
            <summary>
                400x240
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Fwqvga">
            <summary>
                432x240
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Hvga">
            <summary>
                480x320
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Qhd">
            <summary>
                960x540
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._2Kdci">
            <summary>
                2048x1080
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize._4Kdci">
            <summary>
                4096x2160
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Uhd2160">
            <summary>
                3840x2160
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Enums.VideoSize.Uhd4320">
            <summary>
                7680x4320
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Exceptions.ConversionException">
            <inheritdoc />
            <summary>
                The exception that is thrown when a FFmpeg process return error.
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.Exceptions.ConversionException.#ctor(System.String,System.String)">
            <inheritdoc />
            <summary>
                The exception that is thrown when a FFmpeg process return error.
            </summary>
            <param name="errorMessage">FFmpeg error output</param>
            <param name="inputParameters">FFmpeg input parameters</param>
        </member>
        <member name="P:Xabe.FFmpeg.Exceptions.ConversionException.InputParameters">
            <summary>
                FFmpeg input parameters
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.FFbase">
            <summary>
                Base FFmpeg class
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.FFbase.FFmpegDir">
            <summary>
                Directory contains FFmpeg and FFprobe
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.FFbase.FFmpegExecutableName">
            <summary>
                Name of FFmpeg executable name (Case insensitive)
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.FFbase.FFprobeExecutableName">
            <summary>
                Name of FFprobe executable name (Case insensitive)
            </summary>
        </member>
        <member name="F:Xabe.FFmpeg.FFbase.Process">
            <summary>
                FFmpeg process
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.FFbase.#ctor">
            <summary>
                Initalize new FFmpeg. Search FFmpeg and FFprobe in PATH
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.FFbase.FFmpegPath">
            <summary>
                FilePath to FFmpeg
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.FFbase.FFprobePath">
            <summary>
                FilePath to FFprobe
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.FFbase.RunProcess(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Run conversion
            </summary>
            <param name="args">Arguments</param>
            <param name="processPath">FilePath to executable (FFmpeg, ffprobe)</param>
            <param name="rStandardInput">Should redirect standard input</param>
            <param name="rStandardOutput">Should redirect standard output</param>
            <param name="rStandardError">Should redirect standard error</param>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="T:Xabe.FFmpeg.ConversionHandler">
            <summary>
                Info about conversion progress
            </summary>
            <param name="duration">Current processing time</param>
            <param name="totalLength">Movie length</param>
        </member>
        <member name="T:Xabe.FFmpeg.FFmpeg">
            <inheritdoc />
            <summary>
                Wrapper for FFmpeg
            </summary>
        </member>
        <member name="E:Xabe.FFmpeg.FFmpeg.OnProgress">
            <summary>
                Fires when FFmpeg progress changes
            </summary>
        </member>
        <member name="E:Xabe.FFmpeg.FFmpeg.OnDataReceived">
            <summary>
                Fires when FFmpeg process print something
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.FFprobe">
            <summary>
                Get information about media file
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.IConversion">
            <summary>
                Allows to prepare and start IConversion.
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.IConversion.OutputFilePath">
            <summary>
                Output file path
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Clear">
            <summary>
                Clear saved parameters
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Reverse(Xabe.FFmpeg.Enums.Channel)">
            <summary>
                Reverse media
            </summary>
            <param name="type">Channel type</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSpeed(Xabe.FFmpeg.Enums.Speed)">
            <summary>
                Set speed of IConversion. Slower speed equals better compression and quality.
            </summary>
            <param name="speed">Speed</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSpeed(System.Int32)">
            <summary>
                Set max cpu threads
            </summary>
            <param name="cpu">Threads</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetAudio(Xabe.FFmpeg.Enums.AudioCodec,Xabe.FFmpeg.Enums.AudioQuality)">
            <summary>
                Set audio codec and bitrate
            </summary>
            <param name="codec">Audio odec</param>
            <param name="bitrate">Audio bitrade</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetAudio(System.String,Xabe.FFmpeg.Enums.AudioQuality)">
            <summary>
                Set audio codec and bitrate
            </summary>
            <param name="codec">Audio odec</param>
            <param name="bitrate">Audio bitrade</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetVideo(Xabe.FFmpeg.Enums.VideoCodec,System.Int32)">
            <summary>
                Set video codec and bitrate
            </summary>
            <param name="codec">Video codec</param>
            <param name="bitrate">Video bitrate</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetVideo(System.String,System.Int32)">
            <summary>
                Set video codec and bitrate
            </summary>
            <param name="codec">Video codec</param>
            <param name="bitrate">Video bitrate</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.UseMultiThread(System.Boolean)">
            <summary>
                Defines if converter should use all CPU cores
            </summary>
            <param name="multiThread">Use all CPU cores</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetInput(System.Uri)">
            <summary>
                Set URI of stream
            </summary>
            <param name="uri">URI</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.DisableChannel(Xabe.FFmpeg.Enums.Channel)">
            <summary>
                Disable channel. Can remove audio or video from media file.
            </summary>
            <param name="type"></param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetInput(System.String)">
            <summary>
                Set input file
            </summary>
            <param name="input">Media file to convert</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetInput(System.IO.FileInfo)">
            <summary>
                Set input file
            </summary>
            <param name="input">Media file to convert</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetInput(System.String[])">
            <summary>
                Set input files
            </summary>
            <param name="inputs">Media files to convert</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetOutput(System.String)">
            <summary>
                Set output path
            </summary>
            <param name="outputPath">Output media file</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetScale(Xabe.FFmpeg.Enums.VideoSize)">
            <summary>
                Set size of video
            </summary>
            <param name="size">VideoSize</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSize(Xabe.FFmpeg.Model.Size)">
            <summary>
                Set size of video
            </summary>
            <param name="size">VideoSize</param>
            <returns>IConversion object</returns>
        </member>
        <member name="E:Xabe.FFmpeg.IConversion.OnProgress">
            <summary>
                Fires when FFmpeg progress changes
            </summary>
        </member>
        <member name="E:Xabe.FFmpeg.IConversion.OnDataReceived">
            <summary>
                Fires when FFmpeg process print sonething
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetCodec(Xabe.FFmpeg.Enums.VideoCodec)">
            <summary>
                Set video codec
            </summary>
            <param name="codec">Video codec</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetCodec(System.String)">
            <summary>
                Set video codec
            </summary>
            <param name="codec">Video codec</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetBitstreamFilter(Xabe.FFmpeg.Enums.Channel,Xabe.FFmpeg.Enums.Filter)">
            <summary>
                Set filter
            </summary>
            <param name="type">Channel type</param>
            <param name="filter">Filter</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetBitstreamFilter(Xabe.FFmpeg.Enums.Channel,System.String)">
            <summary>
                Set filter
            </summary>
            <param name="type">Channel type</param>
            <param name="filter">Filter</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.StreamCopy(Xabe.FFmpeg.Enums.Channel)">
            <summary>
                It makes FFmpeg omit the decoding and encoding step for the specified stream, so it does only demuxing and muxing.
                It is useful for changing the container format or modifying container-level metadata.
                Cannot be used with operations which require encoding and decoding video (scaling, changing codecs etc.)
            </summary>
            <param name="type">Channel type</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetWatermark(System.String,Xabe.FFmpeg.Enums.Position)">
            <summary>
                Melt watermark into video file
            </summary>
            <param name="imagePath">Watermark</param>
            <param name="position">Position of watermark</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.ChangeSpeed(Xabe.FFmpeg.Enums.Channel,System.Double)">
            <summary>
                Change speed of media
            </summary>
            <param name="channel">Channel</param>
            <param name="multiplaction">Speed value. (0.5 - 2.0). To double the speed set this to 2.0</param>
            <returns>IConversion object</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">When speed isn't between 0.5 - 2.0.</exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSeek(System.Nullable{System.TimeSpan})">
            <summary>
                Seeks in input file to position. (-ss argument)
            </summary>
            <param name="seek">Position</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetOutputFramesCount(System.Int32)">
            <summary>
                Set output frames count
            </summary>
            <param name="number">Number of frames</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetLoop(System.Int32,System.Int32)">
            <summary>
                Loop over the input stream. Currently it works only for image streams. (-loop)
            </summary>
            <param name="count">Number of repeats</param>
            <param name="delay">Delay between repeats (in seconds)</param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.UseShortest(System.Boolean)">
            <summary>
                Finish encoding when the shortest input stream ends. (-shortest)
            </summary>
            <param name="useShortest"></param>
            <returns>IConversion object</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Concat(System.String[])">
            <summary>
                Concat multiple media files. All files must have the same streams (same codecs, same time base, etc.)
            </summary>
            <param name="paths">Media files</param>
            <returns>IConversion object</returns>
            <exception cref="T:System.ArgumentException">When try to concatenate different formats.</exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Concatenate(System.String[])">
            <summary>
                Concat multiple media files. All files must have the same streams (same codecs, same time base, etc.)
            </summary>
            <param name="paths">Media files</param>
            <returns>IConversion object</returns>
            <exception cref="T:System.ArgumentException">When try to concatenate different formats.</exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Build">
            <summary>
                Build FFmpeg arguments
            </summary>
            <returns>Arguments</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Start">
            <summary>
                Start conversion
            </summary>
            <returns>Conversion result</returns>
            <exception cref="T:Xabe.FFmpeg.Exceptions.ConversionException">Occurs when FFmpeg process return error.</exception>
            <exception cref="T:System.ArgumentException">Occurs when no FFmpeg executables were found.</exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Start(System.Threading.CancellationToken)">
            <summary>
                Start conversion
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Conversion result</returns>
            <exception cref="T:Xabe.FFmpeg.Exceptions.ConversionException">Occurs when FFmpeg process return error.</exception>
            <exception cref="T:System.ArgumentException">Occurs when no FFmpeg executables were found.</exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">Occurs when task was cancalled.</exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Start(System.String)">
            <summary>
                Start an FFmpeg process with specified arguments
            </summary>
            <param name="parameters">FFmpeg parameters eg. "-i sample.mp4 -v 0 -vcodec mpeg4 -f mpegts udp://127.0.0.1:23000"</param>
            <returns>Conversion result</returns>
            <exception cref="T:Xabe.FFmpeg.Exceptions.ConversionException">Occurs when FFmpeg process return error.</exception>
            <exception cref="T:System.ArgumentException">Occurs when no FFmpeg executables were found.</exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Start(System.String,System.Threading.CancellationToken)">
            <summary>
                Start an FFmpeg process with specified arguments
            </summary>
            <param name="parameters">FFmpeg parameters eg. "-i sample.mp4 -v 0 -vcodec mpeg4 -f mpegts udp://127.0.0.1:23000"</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Conversion result</returns>
            <exception cref="T:Xabe.FFmpeg.Exceptions.ConversionException">Occurs when FFmpeg process return error.</exception>
            <exception cref="T:System.ArgumentException">Occurs when no FFmpeg executables were found.</exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">Occurs when task was cancalled.</exception>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Rotate(Xabe.FFmpeg.Enums.RotateDegrees)">
            <summary>
                Rotate video
            </summary>
            <param name="rotateDegrees">Rotate type</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.Split(System.TimeSpan,System.TimeSpan)">
            <summary>
                Get part of video
            </summary>
            <param name="startTime">Start point</param>
            <param name="duration">Duration of new video</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.AddSubtitle(System.String,System.String)">
            <summary>
                Add subtitle to file
            </summary>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <param name="language">Language code in ISO 639. Example: "eng", "pol", "pl", "de", "ger"</param>
            <returns></returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSubtitle(System.String)">
            <summary>
                Burn subtitle into file
            </summary>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSubtitle(System.String,System.String)">
            <summary>
                Burn subtitle into file
            </summary>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <param name="encode">Set subtitles input character encoding. Only useful if not UTF-8.</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSubtitle(System.String,System.String,Xabe.FFmpeg.Model.Size)">
            <summary>
                Burn subtitle into file
            </summary>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <param name="style">Override default style or script info parameters of the subtitles. It accepts a string containing ASS style format KEY=VALUE couples separated by ","</param>
            <param name="originalSize">Specify the size of the original video, the video for which the ASS style was composed. This is necessary to correctly scale the fonts if the aspect ratio has been changed.</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.SetSubtitle(System.String,System.String,System.String,Xabe.FFmpeg.Model.Size)">
            <summary>
                Burn subtitle into file
            </summary>
            <param name="subtitlePath">Path to subtitle file in .srt format</param>
            <param name="encode">Set subtitles input character encoding. Only useful if not UTF-8.</param>
            <param name="style">Override default style or script info parameters of the subtitles. It accepts a string containing ASS style format KEY=VALUE couples separated by ","</param>
            <param name="originalSize">Specify the size of the original video, the video for which the ASS style was composed. This is necessary to correctly scale the fonts if the aspect ratio has been changed.</param>
            <returns>Conversion result</returns>
        </member>
        <member name="M:Xabe.FFmpeg.IConversion.AddParameter(System.String)">
            <summary>
                Add additional parameters for the conversion (They must be well formed)
            </summary>
            <param name="parameter"> Parameter to set</param>
            <returns>IConversion object</returns>
        </member>
        <member name="T:Xabe.FFmpeg.IMediaInfo">
            <summary>
                Information about media file
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.IMediaInfo.FileInfo">
            <summary>
                Source file info
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.IMediaInfo.VideoProperties">
            <summary>
                Video properties
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.IMediaInfo.Properties">
            <summary>
                Media properties
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.IMediaInfo.ToString">
            <summary>
                Get formated info about video
            </summary>
            <returns>Formated info about vidoe</returns>
        </member>
        <member name="T:Xabe.FFmpeg.IVideoInfo">
            <inheritdoc />
        </member>
        <member name="T:Xabe.FFmpeg.MediaInfo">
            <inheritdoc cref="T:Xabe.FFmpeg.IMediaInfo" />
        </member>
        <member name="M:Xabe.FFmpeg.MediaInfo.#ctor(System.IO.FileInfo)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.MediaInfo.#ctor(System.String)">
            <summary>
                Get MediaInfo from file
            </summary>
            <param name="fullName">FullName to file</param>
        </member>
        <member name="P:Xabe.FFmpeg.MediaInfo.VideoProperties">
            <inheritdoc />
        </member>
        <member name="P:Xabe.FFmpeg.MediaInfo.Properties">
            <inheritdoc />
        </member>
        <member name="P:Xabe.FFmpeg.MediaInfo.FileInfo">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.MediaInfo.ToString">
            <inheritdoc cref="M:Xabe.FFmpeg.IMediaInfo.ToString" />
        </member>
        <member name="T:Xabe.FFmpeg.Model.MediaProperties">
            <summary>
                Information about media file
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.AudioFormat">
            <summary>
                Audio format
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.Duration">
            <summary>
                Duration of media
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.AudioDuration">
            <summary>
                Duration of audio
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.VideoDuration">
            <summary>
                Duration of video
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.FrameRate">
            <summary>
                Frame rate
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.Height">
            <summary>
                Height
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.Ratio">
            <summary>
                Screen ratio
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.Size">
            <summary>
                Size of file
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.VideoFormat">
            <summary>
                Video format
            </summary>
        </member>
        <member name="P:Xabe.FFmpeg.Model.MediaProperties.Width">
            <summary>
                Width
            </summary>
        </member>
        <member name="T:Xabe.FFmpeg.Model.VideoProperties">
            <inheritdoc />
        </member>
        <member name="T:Xabe.FFmpeg.Subtitle">
            <summary>
                Reference to subtitle file
            </summary>
        </member>
        <member name="M:Xabe.FFmpeg.Subtitle.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.Subtitle.Convert(System.String,Xabe.FFmpeg.Enums.SubtitleFormat)">
            <summary>
                Convert subtitle to specific format
            </summary>
            <param name="outputPath"></param>
            <param name="subtitleFormat"></param>
            <returns>Conversion result</returns>
        </member>
        <member name="T:Xabe.FFmpeg.VideoInfo">
            <inheritdoc cref="T:Xabe.FFmpeg.IVideoInfo" />
        </member>
        <member name="M:Xabe.FFmpeg.VideoInfo.#ctor(System.IO.FileInfo)">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.VideoInfo.#ctor(System.String)">
            <summary>
                Get VideoInfo from file
            </summary>
            <param name="fullName">FullName to file</param>
        </member>
        <member name="P:Xabe.FFmpeg.VideoInfo.Properties">
            <inheritdoc />
        </member>
        <member name="P:Xabe.FFmpeg.VideoInfo.VideoProperties">
            <inheritdoc />
        </member>
        <member name="P:Xabe.FFmpeg.VideoInfo.FileInfo">
            <inheritdoc />
        </member>
        <member name="M:Xabe.FFmpeg.VideoInfo.ToString">
            <inheritdoc cref="M:Xabe.FFmpeg.IMediaInfo.ToString" />
        </member>
    </members>
</doc>
